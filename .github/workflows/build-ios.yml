name: Build & Publish iOS App

on:
  push:
    paths:
      - 'ios/**'
      - src
      - App.tsx
      - index.js
      - package.json
      - yarn.lock
      - .env

env:
  APP_NAME: ShopApperApp
  APP_SCHEME: Production
  APP_CONFIGURATION: Release
  APP_BUNDLE_ID: shopapper.weptile.shopapperbuild

jobs:
  prepare:
    name: Preparing
    runs-on: macos-latest
    outputs:
      native-change: ${{ needs.native-file-changes.outputs.ios }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Detect native files changes
        uses: dorny/paths-filter@v3
        id: native-file-changes
        with:
          filters: |
            ios:
              - 'ios/**'
              - '.env'

  build:
    name: Build iOS App
    runs-on: macos-latest
    if: ${{ needs.prepare.outputs.native-change == 'true' }}
    needs:
      - prepare
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # https://reactnative.dev/docs/build-speed#use-a-compiler-cache
      - name: Restore compiler cache
        uses: ridvanaltun/buildcache-action@v1
        continue-on-error: true

      - name: Get node version
        id: node_version
        run: |
          echo "::set-output name=version::$(node -v)"

      - name: Restore node_modules cache
        id: node-modules-cache
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/yarn.lock') }}-${{ steps.node_version.outputs.version }}
          restore-keys: |
            ${{ runner.os }}-node-modules-

      - name: Restore pods cache
        id: pods-cache
        uses: actions/cache@v4
        with:
          path: |
            ./ios/Pods
            ~/.cocoapods
            ~/Library/Caches/CocoaPods
          key: ${{ runner.os }}-pods-${{ hashFiles('**/Podfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pods-

      - name: Restore Derived Data cache
        uses: actions/cache@v4
        with:
          path: ~/Library/Developer/Xcode/DerivedData
          key: ${{ runner.os }}-xcode-deriveddata-${{ hashFiles('**/*.xcodeproj', '**/*.xcworkspace', '**/Podfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-xcode-deriveddata-

      - name: Install node_modules if necessary
        if: steps.node-modules-cache.outputs.cache-hit != 'true'
        run: |
          yarn install --frozen-lockfile

      - name: Install CocoaPods dependencies
        working-directory: ios
        run: pod install

      - name: Import code sign
        uses: Apple-Actions/import-codesign-certs@v1
        with:
          p12-file-base64: ${{ secrets.APPSTORE_DISTRIBUTION_CERTIFICATE_BASE64 }}
          p12-password: ${{ secrets.APPSTORE_DISTRIBUTION_CERTIFICATE_PASSWORD }}

      - name: Download provisioning
        uses: Apple-Actions/download-provisioning-profiles@v1
        with:
          bundle-id: ${{ env.APP_BUNDLE_ID }}
          issuer-id: ${{ secrets.APPSTORE_CONNECT_ISSUER_ID }}
          api-key-id: ${{ secrets.APPSTORE_CONNECT_KEY_ID }}
          api-private-key: ${{ secrets.APPSTORE_CONNECT_PRIVATE_KEY }}

      - name: Install xcpretty
        run: gem install xcpretty

      - name: Build and Archive
        working-directory: ios
        run: |
          set -o pipefail && xcodebuild CC=clang CPLUSPLUS=clang++ LD=clang LDPLUSPLUS=clang++ archive \
            -workspace $APP_NAME.xcworkspace \
            -scheme $APP_SCHEME \
            -configuration $APP_CONFIGURATION \
            -showBuildTimingSummary \
            -parallelizeTargets \
            -disableAutomaticPackageResolution \
            -archivePath $PWD/build/$APP_NAME.xcarchive | xcpretty

      - name: Export IPA
        working-directory: ios
        run: |
          xcodebuild -exportArchive \
            -archivePath $PWD/build/$APP_NAME.xcarchive \
            -exportPath $PWD/build \
            -exportOptionsPlist ExportOptions.plist

      - name: Upload Artifact (IPA)
        uses: actions/upload-artifact@v4
        with:
          name: IPA
          path: ios/build/${{ env.APP_NAME }}.ipa

  repack:
    name: Repack iOS App
    runs-on: macos-latest
    if: ${{ needs.prepare.outputs.native-change == 'false' }}
    needs:
      - prepare
    steps:
      - name: test
        run: |
          echo "There is no native change detected!"

  publish:
    name: Publish iOS App
    runs-on: macos-latest
    if: always()
    needs:
      - build
      - repack
    steps:
      - name: Retrieve IPA file
        uses: actions/download-artifact@v4
        with:
          name: IPA
          path: path/to/artifacts

      - name: Upload app to TestFlight
        uses: Apple-Actions/upload-testflight-build@v1
        with:
          app-path: ios/build/${{ env.APP_NAME }}.ipa
          issuer-id: ${{ secrets.APPSTORE_CONNECT_ISSUER_ID }}
          api-key-id: ${{ secrets.APPSTORE_CONNECT_KEY_ID }}
          api-private-key: ${{ secrets.APPSTORE_CONNECT_PRIVATE_KEY }}
